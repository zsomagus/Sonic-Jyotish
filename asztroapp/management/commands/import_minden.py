from django.core.management.base import BaseCommand
from data_loader import sheets
from sonicjyotish.models import (
    TelepulesKoordinata,
    FelhasznaloHoroszkop,
    NakshatraInfo,
    PadaFrekvencia,
    MantraMap,
    GrahaTranzit,
    PlanetID,
    KulcsszoValasz,
    VargaFaktor,
    PurushartaMap,
    PlanetAbbreviation,
    # ... tov√°bbi modellek
)
import json

class Command(BaseCommand):
    help = "Teljes adatimport XLSX + JSON + minden PostgreSQL-be"

    def handle(self, *args, **kwargs):

        # üîπ Mantra map
        df = sheets["mantra_map"]
        for sor in df.itertuples():
            MantraMap.objects.get_or_create(
                jegy=sor.jegyekk,
                bolygo=sor.bolyg√≥k,
                hz=sor.hz,
                mantra=sor.mantra
            )

        # üîπ Telep√ºl√©sek
        df = sheets["file2_telepulesek"]
        for sor in df.itertuples():
            TelepulesKoordinata.objects.get_or_create(
                nev=sor.Helys√©gn√©v,
                latitude=sor.√âszaki_sz√©less√©g,
                longitude=sor.Hossz√∫s√°g
            )

        # üîπ Nakshatra info
        df = sheets["nakshatra_info"]
        for sor in df.itertuples():
            NakshatraInfo.objects.get_or_create(
                nev=sor.Nakshatra,
                tulajdonsag=sor.Tulajdons√°g,
                uralkodo=sor.Uralkod√≥,
                mantra=sor.Mantra,
                frekvencia=sor.HZ
            )

        # üîπ Planet abbreviations
        df = sheets["planet_abbreviations"]
        for sor in df.itertuples():
            PlanetAbbreviation.objects.get_or_create(
                nev=sor.N√©v,
                rovidites=sor.R√∂vid√≠t√©s
            )

        # üîπ Planet IDs
        df = sheets["planet_ids"]
        for sor in df.itertuples():
            PlanetID.objects.get_or_create(
                planet=sor.Planet,
                id=sor.ID
            )

        # üîπ Tranzit adat
        df = sheets["graha_tranzit"]
        for sor in df.itertuples():
            GrahaTranzit.objects.get_or_create(
                jegy=sor.JEGY,
                asc_fugg=sor._2,  # vagy sor["ASC. F√úGG≈ê"], ha van ilyen nev≈± attrib√∫tum
                bolygo=sor.BOLYG√ì,
                hang=sor.HANG,
                hz=sor.HZ
            )

        # üîπ Kulcsszavas v√°laszok
        df = sheets["kulcsszo_valaszok"]
        for sor in df.itertuples():
            KulcsszoValasz.objects.get_or_create(
                kulcsszo=sor.Kulcsszo,
                valasz=sor._2,  # vagy V√°lasz sz√∂veg
                mantra=sor._3   # Aj√°nlott mantra
            )

        # üîπ Varga faktorok
        df = sheets["varga_faktor"]
        for sor in df.itertuples():
            VargaFaktor.objects.get_or_create(
                nev=sor.N√©v,
                hanyad=sor.H√°nyad,
                fok=sor["h√°ny fok 1 jegy"]
            )

        # üîπ Purusharta map
        df = sheets["purusharta_map"]
        for sor in df.itertuples():
            PurushartaMap.objects.get_or_create(
                haz_szam=sor["H√°z sz√°ma"],
                purusharta=sor["Purushart√°k"]
            )
        df = sheets["bolygo_nakshatra_map"]
        for sor in df.itertuples():
            BolygoNakshatraMap.objects.get_or_create(
                bolygo=sor.bolyg√≥,
                nakshatra1=sor.nakshatra1,
                nakshatra2=sor.nakshatra2,
                nakshatra3=sor.nakshatra3
            )
        orszaglapok = sheets["orszagok_file1"]
        for region, df in orszaglapok.items():
            for sor in df.itertuples():
                TelepulesKoordinata.objects.get_or_create(
                    nev=sor._1,
                    latitude=sor._2,
                    longitude=sor._3,
                    orszag=region
            )
        df = sheets["house_position"]
        for sor in df.itertuples():
            HousePosition.objects.get_or_create(
                jegy_szam=sor["jegyek sz√°mai"],
                jegy_nev=sor["jegyek nevei"],
                x=sor["x koordin√°ta"],
                y=sor["y koordin√°ta"]
            )
        df = sheets["jegy_uralkodok"]
        for sor in df.itertuples():
            JegyUralkodo.objects.get_or_create(
            jegy=sor.Jegy,
            uralkodo=sor.Uralkod√≥
            )
        df = sheets["nakshatra_frekvencia"]
        for sor in df.itertuples():
            NakshatraFrekvencia.objects.get_or_create(
                nakshatra=sor.Nakshatra,
                uralkodo=sor.Uralkod√≥,
                pada1=sor.Pada1,
                pada2=sor.Pada2,
                pada3=sor.Pada3,
                pada4=sor.Pada4
            )
        df = sheets["nakshatras"]
        for sor in df.itertuples():
            Nakshatra.objects.get_or_create(
                nev=sor.Nakshatra,
                szimb√≥lum=sor.Szimb√≥lum,
                energia=sor.Energia
            )
        df = sheets["tithi_aj√°nl√°sok"]
        for sor in df.itertuples():
            TithiAjanlas.objects.get_or_create(
                tithi=sor.Tithi,
                ajanlas=sor.Tan√°csok
            )
adatbazis = sheets["asztrologiai_adatbazis"]

# Bolyg√≥k
for sor in adatbazis["Bolyg√≥k"].itertuples():
    Bolygo.objects.get_or_create(
        nev=sor.Bolyg√≥,
        tulajdonsagok=sor.Tulajdons√°gok,
        napok=sor.napok,
        szamok=sor.sz√°maik,
        n√∂v√©ny=sor.n√∂v√©ny,
        krist√°ly=sor.krist√°ly
    )

# H√°zak
for sor in adatbazis["H√°zak"].itertuples():
    Haz.objects.get_or_create(
        szam=sor["H√°z sz√°ma"],
        tulajdonsagok=sor["Tulajdons√°gok"],
        uralkodo_bolygo=sor["Uralkod√≥ bolyg√≥"],
        purusharta=sor["purushart√°k"]
    )
        df = sheets["asztrologiai_adatbazis"]["Jegyek"]
        for sor in df.itertuples():
            Jegy.objects.get_or_create(
                nev=sor.Jegy,
                tulajdonsagok=sor.Tulajdons√°gok,
                uralkodo=sor.Uralkod√≥
            )
        df = sheets["asztrologiai_adatbazis"]["elemek"]
        for elem in df.columns:
            tulajdonsagok = df[elem].dropna().tolist()
            Elem.objects.get_or_create(
                nev=elem,
                jellemzok=tulajdonsagok  # vagy k√ºl√∂n t√°bl√°zatba mentve
            )
        df = sheets["asztrologiai_adatbazis"]["csakr√°k"]
        for sor in df.itertuples():
            Csakra.objects.get_or_create(
                nev=sor.csakr√°k,
                mirigy=sor.mirigyxek,
                szin=sor.szin√ºk,
                elem=sor.elem,
                bolygo=sor.bolyg√≥,
                tulajdonsag=sor._6  # ha "Tul." vagy hasonl√≥
            )
        df = sheets["asztrologiai_adatbazis"]["Chara karak√°k"]
        for sor in df.itertuples():
            CharaKaraka.objects.get_or_create(
                nev=sor.karak√°k,
                tulajdonsag=sor.Tulajdons√°gok
            )
        df = sheets["asztrologiai_adatbazis"]["Nakshatra ‚Äì Pada"]
        for sor in df.itertuples():
            NakshatraPada.objects.get_or_create(
                nakshatra=sor.Nakshatra,
                tulajdonsagok=sor["Tulajdons√°gok"],
                pada1=sor["1. P√°da (Dharma)"],
                pada2=sor["2. P√°da (Artha)"],
                pada3=sor["3. P√°da (Kama)"],
                pada4=sor["4. P√°da (Moksha)"]
            )
        df = sheets["asztrologiai_adatbazis"]["r√©szhoroszk√≥pok"]
        for sor in df.itertuples():
            VargaInfo.objects.get_or_create(
                nev=sor.D,
                hasznalat=sor["mire haszn√°ljuk"],
                hany_fok_jegy=sor["h√°ny fok 1 jegy"],
                hanyad=sor.H√°nyad
            )

        # üîπ JSON f√°jl
        with open("static/mentett_adatok.json", encoding="utf-8") as f:
            adatok = json.load(f)

        for item in adatok:
            FelhasznaloHoroszkop.objects.get_or_create(
                vezetek_nev=item["vezetek_nev"],
                kereszt_nev=item["kereszt_nev"],
                datum=item["datum"],
                ido=item["ido"],
                latitude=item["latitude"],
                longitude=item["longitude"],
                ido_zona=item["ido_zona"],
                nyari_idoszamitas=item["nyari_idoszamitas"] == "igen",
                varga=item.get("varga")
            )

        self.stdout.write(self.style.SUCCESS("‚úÖ Minden adat sikeresen import√°lva PostgreSQL-be!"))
